using Plots
using Distributions
using Random
gr(size=(300,300))

function ellipse!(Œº,Œ£;kw...)
    for i=1:3
        plot!([tuple((i*sqrt(Œ£)*[cos(t),sin(t)]+Œº)...) for t in range(0,stop=2œÄ,length=100)];
              seriestype=:shape,linealpha=0.5,linecolor=:gray,fillalpha=[0.4,0.2,0.1][i],kw...)
    end
    current()
end

function mixtureplot(X‚ÇÅ,X‚ÇÇ,Œº‚ÇÄ,Œ£‚ÇÄ,Œº‚ÇÅ,Œ£‚ÇÅ,Œ†)
    scatter(X‚ÇÅ,X‚ÇÇ;fillalpha=0.5,markerstrokewidth=0.5,
        marker_z=Œ†,mc=ColorGradient([:lightblue,:orange]),
        colorbar=:false)
    ellipse!(Œº‚ÇÄ,Œ£‚ÇÄ,fillcolor=:lightblue)
    ellipse!(Œº‚ÇÅ,Œ£‚ÇÅ,fillcolor=:orange)
    plot!(;bg=:transparent,xlims=(-4.5,8.5),ylims=(-3.5,10.5),
        leg=false,ticks=:none,ratio=:equal)
end

function scalein(x)
    (x-1/2)^101/(0.5^101)
end

Random.seed!(123);
n = 100
Œ± = 0.4
ùí©‚ÇÄ = MvNormal([1,1],[2.0 1.0; 1.0 2.0])
ùí©‚ÇÅ = MvNormal([3.0,7.0],[1.5 0; 0 0.5])
X‚ÇÅ = zeros(n)
X‚ÇÇ = zeros(n)
Z = zeros(Bool,n)
for i=1:n
    Z[i] = rand(Bernoulli(Œ±))
    X‚ÇÅ[i],X‚ÇÇ[i] = Z[i] ? rand(ùí©‚ÇÅ) : rand(ùí©‚ÇÄ)
end

Œ± = 0.6
Œº‚ÇÄ = [3.0,3.0]
Œº‚ÇÅ = [1.0,6.0]
Œ£‚ÇÄ = 1.0*Matrix(I, 2, 2)
Œ£‚ÇÅ = 1.0*Matrix(I, 2, 2)
mixtureplot(X‚ÇÅ,X‚ÇÇ,Œº‚ÇÄ,Œ£‚ÇÄ,Œº‚ÇÅ,Œ£‚ÇÅ)

Œ† = [Œ±*pdf(MvNormal(Œº‚ÇÅ,Œ£‚ÇÅ),[x‚ÇÅ,x‚ÇÇ]) /
       ((1-Œ±)*pdf(MvNormal(Œº‚ÇÄ,Œ£‚ÇÄ),[x‚ÇÅ,x‚ÇÇ]) +
        Œ±*pdf(MvNormal(Œº‚ÇÅ,Œ£‚ÇÅ),[x‚ÇÅ,x‚ÇÇ])) for (x‚ÇÅ,x‚ÇÇ) in zip(X‚ÇÅ,X‚ÇÇ)];

Œ± = sum(Œ†)/n
Œº‚ÇÄ = [(1 .- Œ†) ‚ãÖ X‚ÇÅ, (1 .- Œ†) ‚ãÖ X‚ÇÇ] / sum(1 .- Œ†)
Œº‚ÇÅ = [Œ† ‚ãÖ X‚ÇÅ, Œ† ‚ãÖ X‚ÇÇ] / sum(Œ†)
Œ£‚ÇÄ = Matrix(Hermitian(sum((1-œÄ)*([x‚ÇÅ,x‚ÇÇ] - Œº‚ÇÄ) * ([x‚ÇÅ,x‚ÇÇ] - Œº‚ÇÄ)' for (x‚ÇÅ,x‚ÇÇ,œÄ) in zip(X‚ÇÅ,X‚ÇÇ,Œ†))/sum(1 .- Œ†)))
Œ£‚ÇÅ = Matrix(Hermitian(sum(œÄ*([x‚ÇÅ,x‚ÇÇ] - Œº‚ÇÅ) * ([x‚ÇÅ,x‚ÇÇ] - Œº‚ÇÅ)' for (x‚ÇÅ,x‚ÇÇ,œÄ) in zip(X‚ÇÅ,X‚ÇÇ,Œ†))/sum(Œ†)))
Œ† = [Œ±*pdf(MvNormal(Œº‚ÇÅ,Œ£‚ÇÅ),[x‚ÇÅ,x‚ÇÇ]) /
       ((1-Œ±)*pdf(MvNormal(Œº‚ÇÄ,Œ£‚ÇÄ),[x‚ÇÅ,x‚ÇÇ]) +
        Œ±*pdf(MvNormal(Œº‚ÇÅ,Œ£‚ÇÅ),[x‚ÇÅ,x‚ÇÇ])) for (x‚ÇÅ,x‚ÇÇ) in zip(X‚ÇÅ,X‚ÇÇ)];

mixtureplot(X‚ÇÅ,X‚ÇÇ,Œº‚ÇÄ,Œ£‚ÇÄ,Œº‚ÇÅ,Œ£‚ÇÅ,Œ†)
